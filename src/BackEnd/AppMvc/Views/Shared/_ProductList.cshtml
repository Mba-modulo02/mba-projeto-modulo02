@using System.Security.Claims
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager
@model IEnumerable<Business.Models.Produto>
@{
    var isHome = ViewData["IsHome"] as bool? ?? false;
}

@if (!Model.Any())
{
    <div class="alert alert-info text-center mt-4">
        Nenhum produto cadastrado.
    </div>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Nome)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Descricao)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Imagem)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Preco)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Estoque)
            </th>
                <th>E-mail Vendedor</th>
            @if (!isHome)
            {
                <th>
                    @Html.DisplayNameFor(model => model.Ativo)
                </th>
            }

            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model)
        {
            var userIdString = User.FindFirstValue(ClaimTypes.NameIdentifier);
            var userIdGuid = Guid.Parse(userIdString);

            var isOwner = item.VendedorId == userIdGuid;
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nome)

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Descricao)
                </td>
                <td>
                    <img src="~/images/@item.Imagem" alt="" style="width: 70px; height: 100px"/>
                </td>
                <td>
                    @item.Preco.ToString("C")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Estoque)
                </td>
                    <td>
                        @{
                            var vendedor =  UserManager.FindByIdAsync(item.VendedorId.ToString()).GetAwaiter().GetResult();
                        }
                        @(vendedor?.Email ?? "Desconhecido")

                        @Html.DisplayText(vendedor.Email)
                <!-- Checkbox para ativar/desativar -->
                @if (!isHome)
                {
                    <td>
                        <form asp-action="AtualizaAtivo" method="post">
                            <input type="hidden" name="id" value="@item.Id"/>
                            <input type="checkbox" name="ativo" value="true"
                                   onchange="this.form.submit()" @(item.Ativo ? "checked" : "")/>
                        </form>
                    </td>
                }

                @if (!isHome && isOwner)
                {
                    <td>
                        <a asp-action="Details" class="btn btn-warning" asp-route-id="@item.Id">
                            <span class="fa fa-search"></span>
                        </a> |
                        <a asp-action="Edit" class="btn btn-info" asp-route-id="@item.Id">
                            <span class="fa fa-pencil"></span>
                        </a> |
                        <a asp-action="Delete" class="btn btn-danger" asp-route-id="@item.Id">
                            <span class="fa fa-trash"></span>
                        </a>
                    </td>
                }
            </tr>
        }
        </tbody>
    </table>
}